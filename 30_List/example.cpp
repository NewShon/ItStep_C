struct Node//Создание звена(узла) цепи
{
	int data;//данные в узле
	Node *next;//указатель на следующий узел
};
struct FIFO//Объявление очереди
{
	Node *head; //указатель на первый элемент
	Node *tail;//указатель на последний элемент
};

void init(FIFO*q)//Иницилизация очереди(создание пустой очереди)
{
	q->head = NULL;
	q->tail = NULL;
}

FIFO push(FIFO q, int value)
{
	Node *cur = (Node *)malloc(sizeof(Node));//Создает узел
	cur->data = value;//Сохраняем данные в новый узел
	cur->next = NULL;//Задаем указатель

	if (q.tail)//проверка, есть ли элементы  вочереди
		q.tail->next = cur;//переместили указатель с NULL на новый элемент cur

	q.tail = cur;//присвоили хвосту добавленный элемент

	if (q.head == NULL)//если в очереди ничего нет(срабатывает только в самом начале, когда очередь пуста)
		q.head = q.tail;//то изменяем голову в очереди

	return q;
}

int pop(FIFO *q)
{
	if (q->head == NULL)//если очередь пуста, выходим из функции
		return 0;

	Node *cur = q->head;//создаем копию головы
	
	int temp =q->head->data;//копируем данные из головы в темп     q->head обращение к структуре Node   а потом обращаемся к элементу структуры data
	q->head = cur->next;//перемеещние головы на следующий элемент

	free(cur);//удаляем узел
	return temp;
}
